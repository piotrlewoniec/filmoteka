{"mappings":"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","sources":["src/js/main-page-searchByTitle.js","src/js/main-page-trending.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { renderMoviePlaceholders } from './ui/noApi';\nimport { axiosGetData } from './apirest/axiosGetData';\nimport { defaultHeaderGet, searchMovieUrl, searchMovieParams } from './config/stdquery';\nimport { apikeyTMDB } from './config/apikey';\nimport { renderMovieList } from './ui/cardgen';\nimport { setPagination } from './ui/pagination';\n\nconst movieListContainer = document.querySelector('.movie-list-container');\nconst paginationContainer = document.querySelector('.pagination');\nconst searchForm = document.querySelector('.header__form-item');\nconst searchInput = document.querySelector('.header__form-input');\nconst formContainer = document.querySelector('.header__form');\n\nNotiflix.Notify.init();\n\nfunction clearMovieList() {\n  movieListContainer.innerHTML = '';\n}\n\nsearchForm.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  const searchQuery = searchInput.value.trim();\n  if (searchQuery === '') {\n    return;\n  }\n\n  try {\n    const header = { ...defaultHeaderGet, ...searchMovieUrl };\n    const parameters = { ...searchMovieParams, api_key: apikeyTMDB, query: searchQuery, page: 1 };\n    const serverData = await axiosGetData(header, parameters);\n    const movies = serverData.data;\n    // movies.page\n    // movies.total_pages\n    // movies.total_results\n    if (movies.results.length === 0) {\n      formContainer.insertAdjacentHTML(\n        'beforeend',\n        `<p class=\"header__form-alert\">\n          Search result not successful. Enter the correct movie name and try again\n        </p>`,\n      );\n    }\n    clearMovieList();\n    renderMoviePlaceholders(movieListContainer);\n    renderMovieList(movieListContainer, movies.results);\n    setPagination({\n      headerRef: header,\n      parametersRef: parameters,\n      movieListContainer: movieListContainer,\n      paginationContainerRef: paginationContainer,\n      currentPageRef: movies.page,\n      totalPagesRef: movies.total_pages,\n      isLocalStorageRef: false,\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and try again',\n    );\n  }\n});\n","import { renderMoviePlaceholders } from './ui/noApi';\nimport { axiosGetData } from './apirest/axiosGetData';\nimport {\n  defaultHeaderGet,\n  trendingMovieTOP20Url,\n  trendingMovieTOP20Params,\n} from './config/stdquery';\nimport { apikeyTMDB } from './config/apikey';\nimport { renderMovieList } from './ui/cardgen';\nimport { setPagination } from './ui/pagination';\n\nconst movieListContainer = document.querySelector('.movie-list-container');\nconst paginationContainer = document.querySelector('.pagination');\n\nrenderMoviePlaceholders(movieListContainer);\n\nconst trendingMoviesGet = async () => {\n  const header = { ...defaultHeaderGet, ...trendingMovieTOP20Url };\n  const parameters = { ...trendingMovieTOP20Params, api_key: apikeyTMDB, page: 1 };\n  const movies = await axiosGetData(header, parameters);\n  const data = {\n    header: header,\n    parameters: parameters,\n    movieListContainer: movieListContainer,\n    paginationContainer: paginationContainer,\n    movies: movies,\n  };\n  return data;\n};\n\ntrendingMoviesGet()\n  .then(data => displayResult(data))\n  .catch(error => console.log(error));\n\nfunction displayResult(data) {\n  renderMovieList(movieListContainer, data.movies.data.results);\n  setPagination({\n    headerRef: data.header,\n    parametersRef: data.parameters,\n    movieListContainer: data.movieListContainer,\n    paginationContainerRef: data.paginationContainer,\n    currentPageRef: data.movies.data.page,\n    totalPagesRef: data.movies.data.total_pages,\n    isLocalStorageRef: false,\n  });\n}\n\nconst changeThemeButtons = document.querySelectorAll('.movie-list-change-theme');\nchangeThemeButtons.forEach(button => addChangeThemeEventListener(button));\n\nfunction addChangeThemeEventListener(changeThemeButton) {\n  changeThemeButton.addEventListener('click', event => {\n    const section = document.querySelector('.movie-list-section');\n    const container = document.querySelector('.movie-list-container');\n    const buttonIconDay = document.querySelector('.icon-day');\n    const buttonIconNight = document.querySelector('.icon-night');\n    const body = document.querySelector('body');\n    const paginationButtons = document.querySelectorAll('.pagination-btn');\n    if (event.currentTarget.dataset.theme == 'onDark') {\n      section.classList.add('dark-mode');\n      container.classList.add('dark-mode');\n      body.style.backgroundColor = '#000';\n      event.currentTarget.classList.add('is-hidden');\n      buttonIconDay.classList.remove('is-hidden');\n      paginationButtons.forEach(button => {\n        button.classList.add('dark-mode');\n      });\n    } else {\n      section.classList.remove('dark-mode');\n      container.classList.remove('dark-mode');\n      event.currentTarget.classList.remove('is-hidden');\n      buttonIconDay.classList.add('is-hidden');\n      buttonIconNight.classList.remove('is-hidden');\n      body.style.backgroundColor = '#fff';\n      paginationButtons.forEach(button => {\n        button.classList.remove('dark-mode');\n      });\n    }\n  });\n}\n"],"names":["$7IoHk","parcelRequire","$adb8322cc3f36f33$var$movieListContainer","document","querySelector","$adb8322cc3f36f33$var$paginationContainer","$adb8322cc3f36f33$var$searchForm","$adb8322cc3f36f33$var$searchInput","$adb8322cc3f36f33$var$formContainer","$parcel$interopDefault","Notify","init","addEventListener","async","event","preventDefault","searchQuery","value","trim","header","$3A25W","defaultHeaderGet","searchMovieUrl","parameters","searchMovieParams","api_key","$a0S8g","apikeyTMDB","query","page","movies","$8hXaC","axiosGetData","data","results","length","insertAdjacentHTML","innerHTML","$3PnVH","renderMoviePlaceholders","$caO0w","renderMovieList","$iQDRY","setPagination","headerRef","parametersRef","movieListContainer","paginationContainerRef","currentPageRef","totalPagesRef","total_pages","isLocalStorageRef","error","failure","$9769bf9da6990cc8$var$movieListContainer","$9769bf9da6990cc8$var$paginationContainer","trendingMovieTOP20Url","trendingMovieTOP20Params","paginationContainer","$9769bf9da6990cc8$var$trendingMoviesGet","then","$9769bf9da6990cc8$var$displayResult","catch","console","log","querySelectorAll","forEach","button","section","container","buttonIconDay","buttonIconNight","body","paginationButtons","currentTarget","dataset","theme","classList","add","style","backgroundColor","remove"],"version":3,"file":"index.68bc9098.js.map"}
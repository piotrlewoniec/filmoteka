{"mappings":"qhBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,8EAQA,MAAME,EAAqBC,SAASC,cAAc,yBAC5CC,EAAsBF,SAASC,cAAc,eAC7CE,EAAaH,SAASC,cAAc,sBACpCG,EAAcJ,SAASC,cAAc,uBACrCI,EAAgBL,SAASC,cAAc,iBAG7C,SAASK,IACPP,EAAmBQ,UAAY,EACjC,CAHAC,EAAAV,GAASW,OAAOC,OAKhBP,EAAWQ,iBAAiB,UAAUC,MAAMC,IAC1CA,EAAMC,iBAEN,MAAMC,EAAcX,EAAYY,MAAMC,OACtC,GAAoB,KAAhBF,EAAJ,CAGAP,EAAAV,GAASoB,QAAQC,MAAM,2BACvB,IACE,MAAMC,EAAS,IAAKC,EAAAC,oBAAqBD,EAAAE,gBACnCC,EAAa,IAAKH,EAAAI,kBAAmBC,QAASC,EAAAC,WAAYC,MAAOd,EAAae,KAAM,GACpFC,QAAmB,EAAAC,EAAAC,cAAab,EAAQI,GAC9ChB,EAAAV,GAASoB,QAAQgB,SACjB,MAAMC,EAASJ,EAAWK,KACpBC,EAAWhC,EAAciC,kBAM/B,GALAjC,EAAckC,kBACdlC,EAAcmC,YAAYH,GAII,IAA1BF,EAAOM,QAAQC,OAYjB,OAXArC,EAAcsC,mBACZ,YACA,oIAIFnC,EAAAV,GAASW,OAAOmC,QACd,4EAEFtC,SACAJ,EAAoBK,UAAY,IAGlCD,IACAJ,EAAoBK,UAAY,IAChC,EAAAsC,EAAAC,yBAAwB/C,IACxB,EAAAgD,EAAAC,iBAAgBjD,EAAoBoC,EAAOM,SACvCN,EAAOc,YAAc,IACvB,EAAAC,EAAAC,eAAc,CACZC,UAAWhC,EACXiC,cAAe7B,EACf8B,mBAAoBvD,EACpBwD,uBAAwBrD,EACxBsD,eAAgBrB,EAAOL,KACvB2B,cAAetB,EAAOc,YACtBS,mBAAmB,GAMzB,CAHE,MAAOC,GACPnD,EAAAV,GAASW,OAAOmC,QAAQ,4BACxBpC,EAAAV,GAASoB,QAAQgB,QACnB,CA/CE,CA+CF,ICvEFW,EAAAhD,EAAA,S,iEAAA,I,0BAaA,MAAM+D,EAAqB5D,SAASC,cAAc,yBAC5C4D,EAAsB7D,SAASC,cAAc,eAC7C6D,EAAiB,kBAEvB,GAAIA,KAAkBC,aAAc,CAClC,MAAMC,GAAsB,EAAAC,EAAAC,kBAAiBJ,GAC7CE,EAAoBG,WAAY,GAChC,EAAAF,EAAAG,kBAAiBN,EAAgBE,EACnC,EAEA,EAAAnB,EAAAC,yBAAwBc,GAEEhD,WACxBJ,EAAAV,GAASoB,QAAQC,MAAM,2BACvB,MAAMC,EAAS,IAAKC,EAAAC,oBAAqBD,EAAAgD,uBACnC7C,EAAa,IAAKH,EAAAiD,yBAA0B5C,QAASC,EAAAC,WAAYE,KAAM,GACvEK,QAAe,EAAAH,EAAAC,cAAab,EAAQI,GAQ1C,MAPa,CACXJ,OAAQA,EACRI,WAAYA,EACZ8B,mBAAoBM,EACpBW,oBAAqBV,EACrB1B,OAAQA,EAEH,EAGTqC,GACGC,MAAKrC,GAGR,SAAuBA,GACrB5B,EAAAV,GAASoB,QAAQgB,UACjB,EAAAa,EAAAC,iBAAgBY,EAAoBxB,EAAKD,OAAOC,KAAKK,UACrD,EAAAS,EAAAC,eAAc,CACZC,UAAWhB,EAAKhB,OAChBiC,cAAejB,EAAKZ,WACpB8B,mBAAoBlB,EAAKkB,mBACzBC,uBAAwBnB,EAAKmC,oBAC7Bf,eAAgBpB,EAAKD,OAAOC,KAAKN,KACjC2B,cAAerB,EAAKD,OAAOC,KAAKa,YAChCS,mBAAmB,GAEvB,CAfgBgB,CAActC,KAC3BuC,OAAMhB,IAiBPnD,EAAAV,GAASW,OAAOmC,QAAQ,iCACxBpC,EAAAV,GAASoB,QAAQgB,Y","sources":["src/js/main-page.js","src/js/main-page-searchbytitle.js","src/js/main-page-trending.js"],"sourcesContent":["import './ui/daynight';\nimport './main-page-searchbytitle';\nimport './main-page-trending';\nimport './ui/movie-info';\nimport './ui/to-top-btn';\n","import Notiflix from 'notiflix';\nimport { renderMoviePlaceholders } from './ui/noapi';\nimport { axiosGetData } from './apirest/axios-data';\nimport { defaultHeaderGet, searchMovieUrl, searchMovieParams } from './config/stdquery';\nimport { apikeyTMDB } from './config/apikey';\nimport { renderMovieList } from './ui/cardgen';\nimport { setPagination } from './ui/pagination';\n\nconst movieListContainer = document.querySelector('.movie-list-container');\nconst paginationContainer = document.querySelector('.pagination');\nconst searchForm = document.querySelector('.header__form-item');\nconst searchInput = document.querySelector('.header__form-input');\nconst formContainer = document.querySelector('.header__form');\n\nNotiflix.Notify.init();\nfunction clearMovieList() {\n  movieListContainer.innerHTML = '';\n}\n\nsearchForm.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  const searchQuery = searchInput.value.trim();\n  if (searchQuery === '') {\n    return;\n  }\n  Notiflix.Loading.pulse('Movies info download...');\n  try {\n    const header = { ...defaultHeaderGet, ...searchMovieUrl };\n    const parameters = { ...searchMovieParams, api_key: apikeyTMDB, query: searchQuery, page: 1 };\n    const serverData = await axiosGetData(header, parameters);\n    Notiflix.Loading.remove();\n    const movies = serverData.data;\n    const formCopy = formContainer.firstElementChild;\n    formContainer.replaceChildren();\n    formContainer.appendChild(formCopy);\n    // movies.page\n    // movies.total_pages\n    // movies.total_results\n    if (movies.results.length === 0) {\n      formContainer.insertAdjacentHTML(\n        'beforeend',\n        `<p class=\"header__form-alert\">\n          Search result not successful. Enter the correct movie name and try again\n        </p>`,\n      );\n      Notiflix.Notify.failure(\n        'Search result not successful. Enter the correct movie name and try again',\n      );\n      clearMovieList();\n      paginationContainer.innerHTML = '';\n      return;\n    }\n    clearMovieList();\n    paginationContainer.innerHTML = '';\n    renderMoviePlaceholders(movieListContainer);\n    renderMovieList(movieListContainer, movies.results);\n    if (movies.total_pages > 1) {\n      setPagination({\n        headerRef: header,\n        parametersRef: parameters,\n        movieListContainer: movieListContainer,\n        paginationContainerRef: paginationContainer,\n        currentPageRef: movies.page,\n        totalPagesRef: movies.total_pages,\n        isLocalStorageRef: false,\n      });\n    }\n  } catch (error) {\n    Notiflix.Notify.failure('Error downloading movies');\n    Notiflix.Loading.remove();\n  }\n});\n","import { renderMoviePlaceholders } from './ui/noapi';\nimport { axiosGetData } from './apirest/axios-data';\nimport {\n  defaultHeaderGet,\n  trendingMovieTOP20Url,\n  trendingMovieTOP20Params,\n} from './config/stdquery';\nimport { apikeyTMDB } from './config/apikey';\nimport { renderMovieList } from './ui/cardgen';\nimport { setPagination } from './ui/pagination';\nimport { localStorageSave, localStorageLoad } from './system/localstorage';\nimport Notiflix from 'notiflix';\n\nconst movieListContainer = document.querySelector('.movie-list-container');\nconst paginationContainer = document.querySelector('.pagination');\nconst configVariable = 'filmotekaconfig';\n\nif (configVariable in localStorage) {\n  const configVariableLocal = localStorageLoad(configVariable);\n  configVariableLocal.mylibrary = false;\n  localStorageSave(configVariable, configVariableLocal);\n}\n\nrenderMoviePlaceholders(movieListContainer);\n\nconst trendingMoviesGet = async () => {\n  Notiflix.Loading.pulse('Movies info download...');\n  const header = { ...defaultHeaderGet, ...trendingMovieTOP20Url };\n  const parameters = { ...trendingMovieTOP20Params, api_key: apikeyTMDB, page: 1 };\n  const movies = await axiosGetData(header, parameters);\n  const data = {\n    header: header,\n    parameters: parameters,\n    movieListContainer: movieListContainer,\n    paginationContainer: paginationContainer,\n    movies: movies,\n  };\n  return data;\n};\n\ntrendingMoviesGet()\n  .then(data => displayResult(data))\n  .catch(error => displayError(error));\n\nfunction displayResult(data) {\n  Notiflix.Loading.remove();\n  renderMovieList(movieListContainer, data.movies.data.results);\n  setPagination({\n    headerRef: data.header,\n    parametersRef: data.parameters,\n    movieListContainer: data.movieListContainer,\n    paginationContainerRef: data.paginationContainer,\n    currentPageRef: data.movies.data.page,\n    totalPagesRef: data.movies.data.total_pages,\n    isLocalStorageRef: false,\n  });\n}\n\nfunction displayError(error) {\n  Notiflix.Notify.failure('Error downloading movies');\n  Notiflix.Loading.remove();\n}\n"],"names":["parcelRequire","$7IoHk","$d472abed611360d0$var$movieListContainer","document","querySelector","$d472abed611360d0$var$paginationContainer","$d472abed611360d0$var$searchForm","$d472abed611360d0$var$searchInput","$d472abed611360d0$var$formContainer","$d472abed611360d0$var$clearMovieList","innerHTML","$parcel$interopDefault","Notify","init","addEventListener","async","event","preventDefault","searchQuery","value","trim","Loading","pulse","header","$3A25W","defaultHeaderGet","searchMovieUrl","parameters","searchMovieParams","api_key","$a0S8g","apikeyTMDB","query","page","serverData","$4PJQe","axiosGetData","remove","movies","data","formCopy","firstElementChild","replaceChildren","appendChild","results","length","insertAdjacentHTML","failure","$hMMlu","renderMoviePlaceholders","$caO0w","renderMovieList","total_pages","$iQDRY","setPagination","headerRef","parametersRef","movieListContainer","paginationContainerRef","currentPageRef","totalPagesRef","isLocalStorageRef","error","$9769bf9da6990cc8$var$movieListContainer","$9769bf9da6990cc8$var$paginationContainer","$9769bf9da6990cc8$var$configVariable","localStorage","configVariableLocal","$2HHqq","localStorageLoad","mylibrary","localStorageSave","trendingMovieTOP20Url","trendingMovieTOP20Params","paginationContainer","$9769bf9da6990cc8$var$trendingMoviesGet","then","$9769bf9da6990cc8$var$displayResult","catch"],"version":3,"file":"index.44a03d94.js.map"}